version: "3.6"

# This docker-compose file sets up the postgres container to listen for requests
# from your application. To make use of this, your application needs to be configured
# for a local environment to send data requests to http://postgres:5432 when executing
# from within the microservice-network in docker
#

services:
  postgres:
    image: postgres:11.7-alpine
    ports:
      - 5010:5432
    environment:
      POSTGRES_PASSWORD: p4ssw0rd

  rabbitmq:
    image: 'rabbitmq:3.6-management-alpine'
    ports:
      # The standard AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    environment:
      # The location of the RabbitMQ server.  "amqp" is the protocol;
      # "rabbitmq" is the hostname.  Note that there is not a guarantee
      # that the server will start first!  Telling the pika client library
      # to try multiple times gets around this ordering issue.
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"

networks:
  default:
    external:
      name: microservice-network
      # The network can be renamed to whatever you want
      # If you change this here, it also needs to be changed in the package.json scripts
      # in the "service" script and in the "dynamo:network" script.
      